/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video, input, textarea {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  scroll-behavior: smooth;
  box-sizing: border-box;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  display: flow-root;
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

hr {
  width: 100%;
}

:root {
  --cutout-checkmark-start: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 0%,
          40% 80%, /* Center top initial*/
          40% 80%, 30% 70%, /* Right tick*/
          40% 60%, /* Center bottom */
          40% 60%, 40% 80%, /* Left tick */
          40% 80%); /* Center top */
  --cutout-checkmark-end: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 0%,
          40% 80%, /* Center top initial*/
          90% 30%, 80% 20%, /* Right tick*/
          40% 60%, /* Center bottom */
          20% 40%, 10% 50%, /* Left tick */
          40% 80%); /* Center top */
  --cutout-cross-start: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 0%,
          50% 50%, /* Top left initial*/
          50% 50%, /* Middle left */
          50% 50%, 50% 50%, /* Bottom left */
          50% 50%, /* Middle Bottom */
          50% 50%, 50% 50%, /* Bottom right */
          50% 50%, /* Middle Right */
          50% 50%, 50% 50%, /* Top right */
          50% 50%, /* Middle top */
          50% 50%, 50% 50%); /* Top left */
  --cutout-cross-end: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 0%,
          15% 25%, /* Top left initial*/
          40% 50%, /* Middle left */
          15% 75%, 25% 85%, /* Bottom left */
          50% 60%, /* Middle Bottom */
          75% 85%, 85% 75%, /* Bottom right */
          60% 50%, /* Middle Right */
          85% 25%, 75% 15%, /* Top right */
          50% 40%, /* Middle top */
          25% 15%, 15% 25%); /* Top left */
}

code {
  --code-bg: var(--scheme-surface-0);
  --code-padding: var(--space-3xs) var(--space-2xs);
  --code-color: var(--scheme-shade-1);
  --code-border-color: var(--code-bg);
  --code-border-radius: var(--radius);
  border-radius: var(--code-border-radius);
  color: var(--code-color);
  background-color: var(--code-bg);
  padding: var(--code-padding);
  display: inline-block;
  font-family: var(--ff-mono);
  font-size: var(--step-0);
}
pre > code {
  display: block;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  line-height: 1.2;
  font-size: var(--step-0);
  padding: var(--space-xs);
  word-break: normal;
  overflow-x: auto;
}
code:focus {
  outline: var(--stroke) solid var(--scheme-focus);
}

.btn {
  /* Size settings */
  --btn-border-radius: var(--radius);
  --btn-font-size: var(--step-0);
  --btn-focus-outline-width: var(--btn-border-width);
  --btn-focus-outline-offset: var(--btn-focus-outline-width);
  --btn-padding-vertical: var(--space-2xs);
  --btn-padding-horizontal: var(--space-xs);
  --btn-press-dip: 2px;
  /* Apply colors */
  background: var(--btn-bg);
  color: var(--btn-text-color);
  border-radius: var(--btn-border-radius);
  /* Apply styling */
  display: inline-block;
  position: relative;
  border: none;
  padding: var(--btn-padding-vertical) var(--btn-padding-horizontal);
  margin: calc(var(--btn-border-width) * 2);
  cursor: pointer;
  font-weight: normal;
  font-size: var(--btn-font-size);
  text-decoration: none;
  user-select: none;
  transition: background-color var(--transition-duration) ease, transform var(--transition-duration-quick) ease, border var(--transition-duration) ease;
}
.btn:focus-visible {
  outline: var(--btn-focus-outline-width) solid;
  outline-color: var(--btn-focus-outline-color);
  outline-offset: var(--btn-focus-outline-offset);
}
.btn:hover:not(:disabled) {
  background: var(--btn-hover-bg);
  border-color: var(--btn-hover-color);
}
.btn:active:not(:disabled) {
  transform: translateY(var(--btn-press-dip));
}
.btn:disabled {
  background-color: var(--btn-disabled-bg);
  color: var(--btn-disabled-text-color);
  cursor: default;
}
.btn.btn-main {
  --btn-bg: var(--scheme-main);
  --btn-text-color: var(--scheme-background);
  --btn-hover-bg: var(--scheme-main-hover);
}
.btn.btn-fg {
  --btn-bg: var(--scheme-foreground);
  --btn-text-color: var(--scheme-background);
  --btn-hover-bg: var(--scheme-shade-2);
}
.btn.btn-sm {
  --btn-font-size: var(--step--1);
  --btn-padding-vertical: var(--space-3xs);
  --btn-padding-horizontal: var(--space-2xs);
}
.btn.btn-inline {
  --btn-bg: transparent;
  --btn-padding-vertical: 0;
  --btn-padding-horizontal: 0;
  --btn-border-radius: 0;
  --btn-text-color: var(--scheme-foreground);
  --btn-hover-bg: transparent;
}

.btn-group {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: flex-start;
  align-items: stretch;
  width: max-content;
  isolation: isolate;
}
.btn-group > .btn:first-child {
  margin-right: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.btn-group > .btn:last-child {
  margin-left: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.btn-group > .btn:not(:first-child, :last-child) {
  margin-left: 0;
  margin-right: 0;
  border-radius: 0;
}
.btn-group > .btn:focus-visible {
  z-index: 2;
  outline-offset: 0;
}

:root {
  --input-radio-size: var(--space-xs);
  --input-radio-border-size: calc(var(--stroke) * 2);
  --input-radio-color: var(--scheme-foreground);
}

input[type=radio].input-radio {
  appearance: none;
  vertical-align: middle;
  position: relative;
}
input[type=radio].input-radio::before {
  content: "";
  display: inline-block;
  position: absolute;
  user-select: none;
  left: var(--input-radio-border-size);
  top: calc(var(--input-radio-size) * -0.5 + var(--input-radio-border-size) * 0.5);
  width: calc(var(--input-radio-size) - var(--input-radio-border-size) * 2);
  height: calc(var(--input-radio-size) - var(--input-radio-border-size) * 2);
  background-color: var(--scheme-background);
  border-radius: 100%;
  cursor: pointer;
  box-shadow: 0 0 0 var(--input-radio-border-size) var(--scheme-background), 0 0 0 calc(var(--input-radio-border-size) * 2) var(--input-radio-color);
}
input[type=radio].input-radio:checked::before {
  background-color: var(--input-radio-color);
}
input[type=radio].input-radio + label {
  padding-left: calc(var(--checkbox-size) + 1ch);
  vertical-align: middle;
  cursor: pointer;
}
input[type=radio].input-radio::after {
  content: "";
  display: inline-block;
  position: absolute;
  top: calc(var(--input-radio-size) * -0.5);
  width: var(--input-radio-size);
  height: var(--input-radio-size);
  cursor: pointer;
}

.text-input,
.text-input-shift-wrapper {
  --text-input-padding: var(--space-2xs);
  --text-input-focus-border-color: var(--scheme-main);
}

.text-input {
  --text-input-min-character-width: 10ch;
  --text-input-border-width: var(--stroke);
  --text-input-border-radius: var(--radius);
  display: inline-block;
  position: relative;
  padding: var(--text-input-padding);
  background-color: var(--text-input-bg);
  color: var(--text-input-text-color);
  font-size: var(--step-0);
  border: var(--text-input-border-width) var(--text-input-border-color) solid;
  border-radius: var(--text-input-border-radius);
  transition: border-top-color var(--transition-duration) ease, border-right-color var(--transition-duration) ease, border-bottom-color var(--transition-duration) ease, border-left-color var(--transition-duration) ease;
  max-width: 100%;
  max-height: 100%;
  min-height: auto;
  min-width: var(--text-input-min-character-width);
}
.text-input::placeholder {
  transition: color var(--transition-duration) ease;
  color: var(--text-input-placeholder-color);
  opacity: 1;
}
.text-input:focus {
  outline: none;
  border-color: var(--text-input-focus-border-color);
}
.text-input:focus::placeholder {
  color: var(--text-input-focus-border-color);
}
.text-input.text-input-underline {
  border-top: none;
  border-left: none;
  border-right: none;
  border-radius: 0;
  border-bottom-color: var(--text-input-border-color);
}
.text-input.text-input-underline:focus {
  border-color: var(--scheme-main);
}

.text-input-shift-wrapper {
  --input-text-shift-animation-duration: calc(var(--transition-duration) * 0.5);
  position: relative;
}
.text-input-shift-wrapper label {
  --input-text-shift-label-padding: calc(var(--text-input-padding) * 0.5);
  padding-inline: var(--input-text-shift-label-padding);
  color: var(--text-input-placeholder-color);
  content: attr(data-placeholder);
  position: absolute;
  left: calc(var(--text-input-padding) + var(--stroke) - var(--input-text-shift-label-padding));
  z-index: 2;
  pointer-events: none;
  user-select: none;
  transition: bottom var(--input-text-shift-animation-duration) ease, left var(--input-text-shift-animation-duration) ease, color var(--input-text-shift-animation-duration) ease, font-size var(--input-text-shift-animation-duration) ease;
}
.text-input-shift-wrapper .text-input:placeholder-shown + label {
  font-size: var(--step-0);
  bottom: calc(var(--text-input-padding) + var(--stroke));
  color: var(--text-input-placeholder-color);
  background: transparent;
}
.text-input-shift-wrapper .text-input + label {
  font-size: calc(var(--step-0) * 0.75);
  bottom: calc(var(--text-input-padding) * 2 + var(--stroke) * 3 + var(--step-0) * 0.5);
  color: var(--scheme-middleground);
  background: var(--text-input-bg);
}
.text-input-shift-wrapper .text-input:focus + label {
  color: var(--text-input-focus-border-color);
}

input[type=checkbox].checkbox {
  --checkbox-checked-bg: var(--scheme-main);
  --checkbox-checked-hover-bg: var(--scheme-main-hover);
  --checkbox-size: var(--space-s);
  --checkbox-radius: calc(var(--radius) * 0.5);
  --checkbox-cutout-start: var(--cutout-checkmark-start);
  --checkbox-cutout-end: var(--cutout-checkmark-end);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  appearance: none;
  position: relative;
}
input[type=checkbox].checkbox::before {
  content: "";
  display: inline-block;
  position: absolute;
  left: 0;
  top: calc(var(--checkbox-size) * 0.175);
  border-radius: var(--checkbox-radius);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  user-select: none;
  background-color: var(--checkbox-unchecked-bg);
  clip-path: var(--checkbox-cutout-start);
  transition: var(--transition-duration) clip-path var(--transition-shape-bouncy), var(--transition-duration) background-color linear;
}
@media (prefers-reduced-motion) {
  input[type=checkbox].checkbox::before {
    transition: none;
  }
}
input[type=checkbox].checkbox::after {
  content: "";
  display: inline-block;
  position: absolute;
  left: 0;
  top: calc(var(--checkbox-size) * 0.175);
  border-radius: var(--checkbox-radius);
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  cursor: pointer;
}
input[type=checkbox].checkbox:checked::before {
  background-color: var(--checkbox-checked-bg);
  clip-path: var(--checkbox-cutout-end);
}
input[type=checkbox].checkbox:hover::before {
  background-color: var(--checkbox-unchecked-hover-bg);
}
input[type=checkbox].checkbox:checked:hover::before {
  background-color: var(--checkbox-checked-hover-bg);
}
input[type=checkbox].checkbox:focus, input[type=checkbox].checkbox:focus-visible {
  outline: none;
}
input[type=checkbox].checkbox:focus-visible::after {
  outline-offset: var(--stroke);
  outline: var(--stroke) solid var(--scheme-focus);
}
input[type=checkbox].checkbox + label {
  padding-inline-start: 0.5ch;
  cursor: pointer;
}
input[type=checkbox].checkbox.input-check-cross {
  --checkbox-cutout-start: var(--cutout-cross-start);
  --checkbox-cutout-end: var(--cutout-cross-end);
}

.theme-light .hljs {
  color: #333;
  background: #f8f8f8;
}
.theme-light .hljs-comment,
.theme-light .hljs-quote {
  color: #998;
  font-style: italic;
}
.theme-light .hljs-keyword,
.theme-light .hljs-selector-tag,
.theme-light .hljs-subst {
  color: #333;
  font-weight: 700;
}
.theme-light .hljs-literal,
.theme-light .hljs-number,
.theme-light .hljs-tag .hljs-attr,
.theme-light .hljs-template-variable,
.theme-light .hljs-variable {
  color: teal;
}
.theme-light .hljs-doctag,
.theme-light .hljs-string {
  color: #d14;
}
.theme-light .hljs-section,
.theme-light .hljs-selector-id,
.theme-light .hljs-selector-pseudo .hljs-title {
  color: #900;
  font-weight: 700;
}
.theme-light .hljs-subst {
  font-weight: 400;
}
.theme-light .hljs-class .hljs-title,
.theme-light .hljs-type {
  color: #458;
  font-weight: 700;
}
.theme-light .hljs-attribute,
.theme-light .hljs-name,
.theme-light .hljs-tag {
  color: navy;
  font-weight: 400;
}
.theme-light .hljs-link,
.theme-light .hljs-regexp {
  color: #009926;
}
.theme-light .hljs-bullet,
.theme-light .hljs-symbol {
  color: #990073;
}
.theme-light .hljs-built_in,
.theme-light .hljs-builtin-name {
  color: #0086b3;
}
.theme-light .hljs-meta {
  color: #999;
  font-weight: 700;
}
.theme-light .hljs-deletion {
  background: #fdd;
}
.theme-light .hljs-addition {
  background: #dfd;
}
.theme-light .hljs-emphasis {
  font-style: italic;
}
.theme-light .hljs-strong {
  font-weight: 700;
}

.theme-dark .hljs .hljs-comment,
.theme-dark .hljs .hljs-quote {
  color: #83C16A;
}
.theme-dark .hljs .hljs-deletion,
.theme-dark .hljs .hljs-name,
.theme-dark .hljs .hljs-regexp,
.theme-dark .hljs .hljs-selector-class,
.theme-dark .hljs .hljs-selector-id,
.theme-dark .hljs .hljs-selector-pseudo,
.theme-dark .hljs .hljs-tag,
.theme-dark .hljs .hljs-attribute,
.theme-dark .hljs .hljs-template-variable, .theme-dark .hljs .hljs-variable {
  color: #ffa07a;
}
.theme-dark .hljs .hljs-link,
.theme-dark .hljs .hljs-meta,
.theme-dark .hljs .hljs-params,
.theme-dark .hljs .hljs-type {
  color: #f5ab35;
}
.theme-dark .hljs .hljs-built_in,
.theme-dark .hljs .hljs-builtin-name,
.theme-dark .hljs .hljs-literal,
.theme-dark .hljs .hljs-number {
  color: #ED94C0;
}
.theme-dark .hljs .hljs-addition,
.theme-dark .hljs .hljs-bullet,
.theme-dark .hljs .hljs-symbol {
  color: #abe338;
}
.theme-dark .hljs .hljs-string {
  color: #C69F6B;
}
.theme-dark .hljs .hljs-section,
.theme-dark .hljs .hljs-title {
  color: #38CB70;
}
.theme-dark .hljs .hljs-keyword,
.theme-dark .hljs .hljs-selector-tag {
  color: #6C95EB;
}
.theme-dark .hljs .hljs-emphasis {
  font-style: italic;
}
.theme-dark .hljs .hljs-strong {
  font-weight: 700;
}
@media screen and (-ms-high-contrast: active) {
  .theme-dark .hljs .hljs-addition,
  .theme-dark .hljs .hljs-attribute,
  .theme-dark .hljs .hljs-built_in,
  .theme-dark .hljs .hljs-builtin-name,
  .theme-dark .hljs .hljs-bullet,
  .theme-dark .hljs .hljs-comment,
  .theme-dark .hljs .hljs-link,
  .theme-dark .hljs .hljs-literal,
  .theme-dark .hljs .hljs-meta,
  .theme-dark .hljs .hljs-number,
  .theme-dark .hljs .hljs-params,
  .theme-dark .hljs .hljs-quote,
  .theme-dark .hljs .hljs-string,
  .theme-dark .hljs .hljs-symbol,
  .theme-dark .hljs .hljs-type {
    color: highlight;
  }
  .theme-dark .hljs .hljs-keyword, .theme-dark .hljs .hljs-selector-tag {
    font-weight: 700;
  }
}

.even-columns {
  display: grid;
  grid-auto-flow: column;
}

:root {
  --page-width-widescreen: min(85rem, 95%);
  --page-width-reader: min(50rem, 93%);
  --page-margin-widescreen: calc((100% - var(--page-width-widescreen)) * 0.5);
  --page-margin-reader: calc((100% - var(--page-width-reader)) * 0.5);
}

.page {
  display: flow-root;
  margin-inline: auto;
  width: 100%;
}
.page.page-widescreen {
  max-width: var(--page-width-widescreen);
}
.page.page-reader {
  max-width: var(--page-width-reader);
}
.page.page-vertically-centered {
  margin-top: auto;
  margin-bottom: auto;
}

:root {
  --transition-duration: 250ms;
  --transition-duration-quick: 100ms;
  --transition-shape-bouncy: cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

:root {
  --stroke: 2px;
  --radius: 8px;
}

/* @link https://utopia.fyi/space/calculator?c=320,18,1.2,1240,20,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */
:root {
  --space-3xs: clamp(0.31rem, calc(0.31rem + 0.00vw), 0.31rem);
  --space-2xs: clamp(0.56rem, calc(0.54rem + 0.11vw), 0.63rem);
  --space-xs: clamp(0.88rem, calc(0.85rem + 0.11vw), 0.94rem);
  --space-s: clamp(1.13rem, calc(1.08rem + 0.22vw), 1.25rem);
  --space-m: clamp(1.69rem, calc(1.62rem + 0.33vw), 1.88rem);
  --space-l: clamp(2.25rem, calc(2.16rem + 0.43vw), 2.50rem);
  --space-xl: clamp(3.38rem, calc(3.24rem + 0.65vw), 3.75rem);
  --space-2xl: clamp(4.50rem, calc(4.33rem + 0.87vw), 5.00rem);
  --space-3xl: clamp(6.75rem, calc(6.49rem + 1.30vw), 7.50rem);
  /* One-up pairs */
  --space-3xs-2xs: clamp(0.31rem, calc(0.20rem + 0.54vw), 0.63rem);
  --space-2xs-xs: clamp(0.56rem, calc(0.43rem + 0.65vw), 0.94rem);
  --space-xs-s: clamp(0.88rem, calc(0.74rem + 0.65vw), 1.25rem);
  --space-s-m: clamp(1.13rem, calc(0.86rem + 1.30vw), 1.88rem);
  --space-m-l: clamp(1.69rem, calc(1.40rem + 1.41vw), 2.50rem);
  --space-l-xl: clamp(2.25rem, calc(1.73rem + 2.61vw), 3.75rem);
  --space-xl-2xl: clamp(3.38rem, calc(2.81rem + 2.83vw), 5.00rem);
  --space-2xl-3xl: clamp(4.50rem, calc(3.46rem + 5.22vw), 7.50rem);
  /* Custom pairs */
  --space-s-l: clamp(1.13rem, calc(0.65rem + 2.39vw), 2.50rem);
}

html,
.palette-default,
html {
  --scheme-focus: hsl(30, 100%, 50%);
  --scheme-main: var(--palette-default-main);
  --scheme-main-hover: var(--palette-default-main-hover);
  --scheme-background: var(--palette-default-background);
  --scheme-foreground: var(--palette-default-foreground);
  --scheme-text-color: var(--palette-default-text-color);
  --scheme-text-muted-color: var(--palette-default-text-muted-color);
  --scheme-middleground: var(--palette-default-middleground);
  --scheme-shadow: var(--palette-default-shadow);
  --scheme-shade-0: var(--palette-default-shade-0);
  --scheme-shade-1: var(--palette-default-shade-1);
  --scheme-shade-2: var(--palette-default-shade-2);
  --scheme-shade-3: var(--palette-default-shade-3);
  --scheme-shade-4: var(--palette-default-shade-4);
  --scheme-shade-5: var(--palette-default-shade-5);
  --scheme-shade-6: var(--palette-default-shade-6);
  --scheme-shade-7: var(--palette-default-shade-7);
  --scheme-shade-8: var(--palette-default-shade-8);
  --scheme-shade-9: var(--palette-default-shade-9);
  --scheme-surface-0: var(--palette-default-surface-0);
  --control-bg: var(--palette-default-control-bg);
  --control-hover-bg: var(--palette-default-control-hover-bg);
  --control-disabled-bg: var(--palette-default-control-disabled-bg);
  --btn-bg: var(--control-bg);
  --btn-hover-bg: var(--control-hover-bg);
  --btn-disabled-bg: var(--control-disabled-bg);
  --btn-disabled-text-color: var(--scheme-text-muted-color);
  --btn-text-color: var(--scheme-text-color);
  --btn-focus-outline-color: var(--scheme-focus);
  --checkbox-unchecked-bg: var(--control-bg);
  --checkbox-unchecked-hover-bg: var(--control-hover-bg);
  --text-input-bg: var(--scheme-background);
  --text-input-placeholder-color: var(--scheme-shade-6);
  --text-input-text-color: var(--scheme-text-color);
  --text-input-border-color: var(--control-bg);
}

body {
  background-color: var(--scheme-background);
  color: var(--scheme-foreground);
}

.theme-light {
  --palette-default-main: hsl(204, 100%, 53%);
  --palette-default-main-hover: hsl(204, 100%, 45%);
  --palette-default-shade-0: hsl(204, 10%, 5%);
  --palette-default-shade-1: hsl(204, 10%, 11%);
  --palette-default-shade-2: hsl(204, 10%, 15%);
  --palette-default-shade-3: hsl(204, 10%, 19%);
  --palette-default-shade-4: hsl(204, 10%, 26%);
  --palette-default-shade-5: hsl(204, 10%, 35%);
  --palette-default-shade-6: hsl(204, 10%, 79%);
  --palette-default-shade-7: hsl(204, 10%, 90%);
  --palette-default-shade-8: hsl(204, 10%, 95%);
  --palette-default-shade-9: hsl(204, 10%, 100%);
  --palette-default-control-bg: hsl(204, 10%, 90%);
  --palette-default-control-hover-bg: hsl(204, 10%, 83%);
  --palette-default-control-disabled-bg: hsl(204, 10%, 90%);
  --palette-default-surface-0: var(--palette-default-shade-8);
  --palette-default-background: var(--palette-default-shade-9);
  --palette-default-foreground: var(--palette-default-shade-0);
  --palette-default-middleground: var(--palette-default-shade-6);
  --palette-default-text-color: hsl(204, 0%, 5%);
  --palette-default-text-muted-color: hsl(204, 0%, 70%);
  --palette-default-shadow: hsl(204, 10%, 70%);
  color-scheme: dark;
}

.theme-dark {
  --palette-default-main: hsl(204, 100%, 53%);
  --palette-default-main-hover: hsl(204, 100%, 61%);
  --palette-default-shade-0: hsl(204, 10%, 100%);
  --palette-default-shade-1: hsl(204, 10%, 92%);
  --palette-default-shade-2: hsl(204, 10%, 80%);
  --palette-default-shade-3: hsl(204, 10%, 79%);
  --palette-default-shade-4: hsl(204, 10%, 35%);
  --palette-default-shade-5: hsl(204, 10%, 26%);
  --palette-default-shade-6: hsl(204, 10%, 19%);
  --palette-default-shade-7: hsl(204, 10%, 15%);
  --palette-default-shade-8: hsl(204, 10%, 11%);
  --palette-default-shade-9: hsl(204, 10%, 5%);
  --palette-default-control-bg: hsl(204, 10%, 20%);
  --palette-default-control-hover-bg: hsl(204, 10%, 25%);
  --palette-default-control-disabled-bg: hsl(204, 10%, 13%);
  --palette-default-surface-0: var(--palette-default-shade-7);
  --palette-default-background: var(--palette-default-shade-8);
  --palette-default-foreground: var(--palette-default-shade-1);
  --palette-default-middleground: var(--palette-default-shade-5);
  --palette-default-text-color: hsl(204, 0%, 95%);
  --palette-default-text-muted-color: hsl(204, 0%, 50%);
  --palette-default-shadow: hsl(204, 10%, 1%);
  color-scheme: light;
}

:root {
  --ff-default: sans-serif;
  --ff-mono: monospace;
  --heading-color: var(--scheme-foreground);
  --anchor-color: var(--scheme-main);
  --paragraph-width: 100%;
  /* @link https://utopia.fyi/type/calculator?c=320,18,1.2,1240,20,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */
  --step--2: clamp(0.78rem, calc(0.77rem + 0.03vw), 0.80rem);
  --step--1: clamp(0.94rem, calc(0.92rem + 0.11vw), 1.00rem);
  --step-0: clamp(1.13rem, calc(1.08rem + 0.22vw), 1.25rem);
  --step-1: clamp(1.35rem, calc(1.28rem + 0.37vw), 1.56rem);
  --step-2: clamp(1.62rem, calc(1.50rem + 0.58vw), 1.95rem);
  --step-3: clamp(1.94rem, calc(1.77rem + 0.87vw), 2.44rem);
  --step-4: clamp(2.33rem, calc(2.08rem + 1.25vw), 3.05rem);
  --step-5: clamp(2.80rem, calc(2.45rem + 1.77vw), 3.82rem);
}

body,
html {
  font-family: var(--ff-default);
  font-size: var(--step-0);
  line-height: 1.2;
}

::selection {
  color: var(--scheme-background);
  background-color: var(--scheme-main);
}

a {
  color: unset;
}

h1, h2, h3, h4, h5, h6 {
  color: var(--heading-color);
  font-weight: bold;
}

h1 {
  font-size: var(--step-5);
}

h2 {
  font-size: var(--step-4);
}

h3 {
  font-size: var(--step-3);
}

h4 {
  font-size: var(--step-2);
}

h5 {
  font-size: var(--step-1);
}

h6 {
  font-size: var(--step-0);
}

p {
  max-width: var(--paragraph-width);
  margin-bottom: var(--space-s);
}

hr {
  border: none;
  border-top: var(--stroke) solid var(--scheme-surface-0);
}

strong {
  font-weight: bold;
}

em {
  font-style: italic;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-muted {
  color: var(--scheme-text-muted-color);
}

.text-small {
  font-size: var(--step--1);
}

/*# sourceMappingURL=ready.css.map */
